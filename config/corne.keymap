/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
       &kp TAB   &kp Q   &kp W     &kp E   &kp R        &kp T        &kp Y   &kp U          &kp I    &kp O     &kp P    &kp CAPS
 &mt LCTRL ESC   &kp A   &kp S     &kp D   &kp F        &kp G        &kp H   &kp J          &kp K    &kp L  &kp SEMI     &kp SQT
     &kp LSHFT   &kp Z   &kp X     &kp C   &kp V        &kp B        &kp N   &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp RSHIFT
                                &kp LALT   &mo 2  &lt 1 SPACE  &lt 3 ENTER   &mo 2  &kp BACKSPACE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
 &trans        &trans        &trans        &trans        &trans        &trans    &trans    &trans    &trans     &trans  &trans  &trans
 &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &kp LEFT  &kp DOWN    &kp UP  &kp RIGHT  &trans  &trans
 &trans        &trans        &trans        &trans        &trans        &trans    &trans    &trans    &trans     &trans  &trans  &trans
                                         &kp LGUI        &trans     &kp SPACE   &kp RET    &trans  &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
 &kp TILDE      &kp EXCL        &kp AT        &kp HASH      &kp DLLR     &kp PRCNT     &kp CARET      &kp AMPS      &kp STAR      &kp LPAR      &kp RPAR  &kp GRAVE
    &trans  &kp NUMBER_1  &kp NUMBER_2    &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0     &trans
    &trans     &kp UNDER      &kp PLUS  &kp LEFT_BRACE      &kp RBRC      &kp PIPE     &kp MINUS     &kp EQUAL      &kp LBKT      &kp RBKT      &kp BSLH     &trans
                                                &trans        &trans        &trans        &trans        &trans        &trans
            >;
        };

        Layer__3 {
            bindings = <
 &trans  &kp LA(EXCL)        &kp LA(AT)      &kp LA(HASH)      &kp LA(DLLR)     &kp LA(PRCNT)     &kp LA(CARET)      &kp LA(AMPS)      &kp LA(STAR)      &kp LA(LPAR)      &kp LA(RPAR)  &trans
 &trans    &kp LA(N1)  &kp LA(NUMBER_2)  &kp LA(NUMBER_3)  &kp LA(NUMBER_4)  &kp LA(NUMBER_5)  &kp LA(NUMBER_6)  &kp LA(NUMBER_7)  &kp LA(NUMBER_8)  &kp LA(NUMBER_9)  &kp LA(NUMBER_0)  &trans
 &trans        &trans            &trans            &trans            &trans            &trans            &trans            &trans            &trans            &trans            &trans  &trans
                                                   &trans            &trans            &trans            &trans            &trans            &trans
            >;
        };
    };
};
